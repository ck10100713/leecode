Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

 

Example 1:


Input: matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
Output: 4
Example 2:


Input: matrix = [["0","1"],["1","0"]]
Output: 1
Example 3:

Input: matrix = [["0"]]
Output: 0

class Solution:
    def maximalSquare(self, matrix: List[List[str]]) -> int:
        mx=0
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if(matrix[i][j]=="0"):
                    matrix[i][j]=0
                else:
                    if(i==0 or j==0):
                        matrix[i][j]=1
                    else:
                        matrix[i][j]=min(matrix[i][j-1],matrix[i-1][j],matrix[i-1][j-1])+1
                mx=max(mx,matrix[i][j])
            # print(matrix[i])
        # print(matrix)
        return mx**2