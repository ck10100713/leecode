Given an array of integers nums and a positive integer k, check whether it is possible to divide this array into sets of k consecutive numbers.

Return true if it is possible. Otherwise, return false.

 

Example 1:

Input: nums = [1,2,3,3,4,4,5,6], k = 4
Output: true
Explanation: Array can be divided into [1,2,3,4] and [3,4,5,6].
Example 2:

Input: nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3
Output: true
Explanation: Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].
Example 3:

Input: nums = [1,2,3,4], k = 3
Output: false
Explanation: Each array should be divided in subarrays of size 3.

class Solution:

    def isPossibleDivide(self, nums: List[int], k: int) -> bool:
        if k == 1:
            return True
        if len(nums) % k:
            return False
        nums.sort()
        needed = []
        for v in nums:
            if not needed:
                heappush(needed, (v + 1, k - 1))
                continue
            val, rem = needed[0]
            if val < v:
                return False
            if val > v:
                heappush(needed, (v + 1, k - 1))
            elif rem > 1:
                heapreplace(needed, (val + 1, rem - 1))
            else:
                heappop(needed)
        
        return not needed